---
// Reading time display component
import { getReadingTimeFromMarkdown, getReadingTimeDisplay } from '../utils/readingTime';
import { getLangFromUrl } from '../utils/i18n';

interface Props {
  content?: string;
  showIcon?: boolean;
  className?: string;
}

const { content = '', showIcon = true, className = '' } = Astro.props;
const lang = getLangFromUrl(Astro.url);

const readingTime = getReadingTimeFromMarkdown(content, lang);
const display = getReadingTimeDisplay(readingTime, lang);
---

<span 
  class={`inline-flex items-center gap-1 text-sm text-gray-500 dark:text-gray-400 ${className}`}
  aria-label={display.ariaLabel}
  title={display.ariaLabel}
>
  {showIcon && (
    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
    </svg>
  )}
  <span>{display.text}</span>
  {readingTime.words > 0 && (
    <span class="text-xs opacity-75 ml-1">
      ({readingTime.words.toLocaleString()} {lang === 'ko' ? '단어' : 'words'})
    </span>
  )}
</span>