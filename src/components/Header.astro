---
import HeaderLink from './HeaderLink.astro';
import LanguageSwitcher from './LanguageSwitcher.astro';
import ThemeToggle from './ThemeToggle.astro';
import SearchButton from './SearchButton.astro';
import GlobalSearch from './GlobalSearch.astro';
import { SITE_TITLE } from '../consts';
import { getLangFromUrl, t } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
---

<header class="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-40">
	<nav class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="flex justify-between items-center h-16">
			<div class="flex items-center">
				<a href="/" class="text-xl font-bold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
					{SITE_TITLE}
				</a>
			</div>
			
			<div class="hidden md:flex items-center space-x-8">
				<HeaderLink href="/">{t("navigation.home", lang)}</HeaderLink>
				<HeaderLink href="/about">{t("navigation.about", lang)}</HeaderLink>
				<HeaderLink href="/blog">{t("navigation.blog", lang)}</HeaderLink>
				<HeaderLink href="/categories">{lang === 'ko' ? '카테고리' : 'Categories'}</HeaderLink>
				<SearchButton />
				<ThemeToggle />
				<LanguageSwitcher />
			</div>
			
			<!-- Mobile menu button -->
			<div class="md:hidden flex items-center gap-4">
				<SearchButton />
				<ThemeToggle />
				<LanguageSwitcher />
				<button 
					id="mobile-menu-button"
					class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
					aria-expanded="false"
				>
					<span class="sr-only">Open main menu</span>
					<svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
					</svg>
					<svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
					</svg>
				</button>
			</div>
		</div>
		
		<!-- Mobile menu -->
		<div id="mobile-menu" class="md:hidden hidden">
			<div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200 dark:border-gray-700">
				<HeaderLink href="/" class="block px-3 py-2 text-base font-medium">{t("navigation.home", lang)}</HeaderLink>
				<HeaderLink href="/about" class="block px-3 py-2 text-base font-medium">{t("navigation.about", lang)}</HeaderLink>
				<HeaderLink href="/blog" class="block px-3 py-2 text-base font-medium">{t("navigation.blog", lang)}</HeaderLink>
				<HeaderLink href="/categories" class="block px-3 py-2 text-base font-medium">{lang === 'ko' ? '카테고리' : 'Categories'}</HeaderLink>
			</div>
		</div>
	</nav>
</header>

<!-- Global Search Modal -->
<GlobalSearch />

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const mobileMenuButton = document.getElementById('mobile-menu-button');
		const mobileMenu = document.getElementById('mobile-menu');
		
		if (mobileMenuButton && mobileMenu) {
			mobileMenuButton.addEventListener('click', () => {
				const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
				mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
				
				if (isExpanded) {
					mobileMenu.classList.add('hidden');
				} else {
					mobileMenu.classList.remove('hidden');
				}
				
				// Toggle icons
				const openIcon = mobileMenuButton.querySelector('svg:first-of-type');
				const closeIcon = mobileMenuButton.querySelector('svg:last-of-type');
				if (openIcon && closeIcon) {
					openIcon.classList.toggle('hidden');
					closeIcon.classList.toggle('hidden');
				}
			});
		}
	});
</script>