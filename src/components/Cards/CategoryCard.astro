---
import { getLangFromUrl } from '../../utils/i18n';

const lang = getLangFromUrl(Astro.url);

interface Props {
  title: string;
  description?: string;
  count: number;
  icon?: string;
  href: string;
  color?: 'primary' | 'secondary' | 'success' | 'warning' | 'error';
  size?: 'small' | 'default' | 'large';
}

const {
  title,
  description,
  count,
  icon,
  href,
  color = 'primary',
  size = 'default'
} = Astro.props;

// Color variants
const colorClasses = {
  primary: {
    bg: 'from-primary-500 to-primary-600',
    icon: 'bg-primary-100 dark:bg-primary-900/30 text-primary-600 dark:text-primary-400',
    border: 'border-primary-200 dark:border-primary-800',
    hover: 'hover:border-primary-300 dark:hover:border-primary-600 hover:bg-primary-50 dark:hover:bg-primary-900/20'
  },
  secondary: {
    bg: 'from-gray-500 to-gray-600',
    icon: 'bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400',
    border: 'border-gray-200 dark:border-gray-700',
    hover: 'hover:border-gray-300 dark:hover:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800'
  },
  success: {
    bg: 'from-green-500 to-green-600',
    icon: 'bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400',
    border: 'border-green-200 dark:border-green-800',
    hover: 'hover:border-green-300 dark:hover:border-green-600 hover:bg-green-50 dark:hover:bg-green-900/20'
  },
  warning: {
    bg: 'from-yellow-500 to-yellow-600',
    icon: 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-600 dark:text-yellow-400',
    border: 'border-yellow-200 dark:border-yellow-800',
    hover: 'hover:border-yellow-300 dark:hover:border-yellow-600 hover:bg-yellow-50 dark:hover:bg-yellow-900/20'
  },
  error: {
    bg: 'from-red-500 to-red-600',
    icon: 'bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400',
    border: 'border-red-200 dark:border-red-800',
    hover: 'hover:border-red-300 dark:hover:border-red-600 hover:bg-red-50 dark:hover:bg-red-900/20'
  }
};

// Size variants
const sizeClasses = {
  small: {
    container: 'p-4',
    icon: 'w-10 h-10',
    title: 'text-base',
    description: 'text-sm',
    count: 'text-lg'
  },
  default: {
    container: 'p-6',
    icon: 'w-12 h-12',
    title: 'text-lg',
    description: 'text-base',
    count: 'text-xl'
  },
  large: {
    container: 'p-8',
    icon: 'w-16 h-16',
    title: 'text-xl',
    description: 'text-lg',
    count: 'text-2xl'
  }
};

const currentColor = colorClasses[color];
const currentSize = sizeClasses[size];
---

<a
  href={href}
  class={`group block bg-white dark:bg-gray-800 border ${currentColor.border} ${currentColor.hover} rounded-2xl ${currentSize.container} transition-all duration-300 hover:shadow-lg hover:shadow-gray-100 dark:hover:shadow-gray-900/20 hover:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2`}
>
  <div class="text-center">
    <!-- Icon -->
    <div class={`${currentSize.icon} ${currentColor.icon} rounded-2xl flex items-center justify-center mx-auto mb-4 transition-transform duration-300 group-hover:scale-110`}>
      {icon === 'folder' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-5l-2-2H5a2 2 0 00-2 2z" />
        </svg>
      )}
      {icon === 'tag' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
        </svg>
      )}
      {icon === 'code' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
        </svg>
      )}
      {icon === 'book' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
        </svg>
      )}
      {icon === 'lightbulb' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
        </svg>
      )}
      {icon === 'star' && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
        </svg>
      )}
      {!icon && (
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
        </svg>
      )}
    </div>
    
    <!-- Title -->
    <h3 class={`${currentSize.title} font-bold text-gray-900 dark:text-white mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors`}>
      {title}
    </h3>
    
    <!-- Description -->
    {description && (
      <p class={`${currentSize.description} text-gray-600 dark:text-gray-300 mb-3 leading-relaxed`}>
        {description}
      </p>
    )}
    
    <!-- Count -->
    <div class="flex items-center justify-center gap-2">
      <span class={`${currentSize.count} font-bold text-primary-600 dark:text-primary-400`}>
        {count}
      </span>
      <span class="text-sm text-gray-500 dark:text-gray-400">
        {count === 1 
          ? (lang === 'ko' ? '포스트' : 'post')
          : (lang === 'ko' ? '포스트' : 'posts')
        }
      </span>
    </div>
    
    <!-- Arrow Icon -->
    <div class="mt-4 flex justify-center">
      <svg class="w-5 h-5 text-gray-400 group-hover:text-primary-500 transform group-hover:translate-x-1 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
      </svg>
    </div>
  </div>
</a>

<style>
  /* Ensure proper hover effects */
  .group:hover svg {
    transform: translateX(4px);
  }
  
  /* Focus styles for accessibility */
  a:focus {
    outline: 2px solid rgb(var(--color-primary-500));
    outline-offset: 2px;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .group:hover .transform {
      transform: none;
    }
    
    .hover:-translate-y-1 {
      transform: none;
    }
    
    * {
      transition-duration: 0.01ms !important;
    }
  }
</style>