---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE } from '../consts';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import GoogleAnalytics from './GoogleAnalytics.astro';
import WebVitals from './WebVitals.astro';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description?: string;
	image?: ImageMetadata | string;
	article?: boolean;
	publishedTime?: Date;
	modifiedTime?: Date;
	tags?: string[];
	author?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description = '소프트웨어 엔지니어이자 기술 블로거입니다. 개발과 기술에 대한 경험과 인사이트를 공유합니다.',
	image = FallbackImage,
	article = false,
	publishedTime,
	modifiedTime,
	tags = [],
	author = 'Jay Lee'
} = Astro.props;

// Get image URL, handle both string and ImageMetadata
const imageUrl = typeof image === 'string' ? image : image.src;

// JSON-LD 구조화된 데이터
const jsonLD = {
	'@context': 'https://schema.org',
	'@type': article ? 'BlogPosting' : 'WebSite',
	name: title,
	headline: title,
	description: description,
	url: canonicalURL.toString(),
	image: {
		'@type': 'ImageObject',
		url: new URL(imageUrl, Astro.site).toString(),
		width: 1200,
		height: 630
	},
	author: {
		'@type': 'Person',
		name: author,
		url: Astro.site?.toString(),
		sameAs: [
			'https://github.com/jayleekr',
			'https://linkedin.com/in/jayleekr'
		]
	},
	publisher: {
		'@type': 'Organization',
		name: SITE_TITLE,
		url: Astro.site?.toString(),
		logo: {
			'@type': 'ImageObject',
			url: new URL('/favicon.svg', Astro.site).toString()
		}
	},
	...(article && publishedTime && {
		datePublished: publishedTime.toISOString(),
		...(modifiedTime && { dateModified: modifiedTime.toISOString() }),
		keywords: tags.join(', '),
		articleSection: 'Technology',
		inLanguage: 'ko-KR'
	})
};
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover,user-scalable=no" />
<meta name="theme-color" content="#3b82f6" />
<meta name="color-scheme" content="light dark" />

<!-- Mobile optimizations -->
<meta name="mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />
<meta name="apple-touch-fullscreen" content="yes" />
<meta name="format-detection" content="telephone=no,date=no,email=no,address=no" />

<!-- Icons and Manifest -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- RSS and Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={`${SITE_TITLE} - All Posts`}
	href={new URL('rss.xml', Astro.site)}
/>
<link
	rel="alternate"
	type="application/rss+xml"
	title={`${SITE_TITLE} - English Posts`}
	href={new URL('rss/en.xml', Astro.site)}
/>

<!-- Preload Critical Resources -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- DNS Prefetch for External Resources -->
<link rel="dns-prefetch" href="//fonts.googleapis.com" />
<link rel="dns-prefetch" href="//github.com" />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<meta name="robots" content="index, follow" />
<meta name="language" content="ko-KR" />
<meta name="generator" content={Astro.generator} />

<!-- Google Search Console Verification -->
<!-- <meta name="google-site-verification" content="YOUR_VERIFICATION_CODE_HERE" /> -->

<!-- Keywords for articles -->
{tags.length > 0 && <meta name="keywords" content={tags.join(', ')} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(imageUrl, Astro.site)} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:image:alt" content={title} />
<meta property="og:image:type" content="image/jpeg" />
<meta property="og:locale" content="ko_KR" />
<meta property="og:locale:alternate" content="en_US" />

<!-- Article specific Open Graph -->
{article && publishedTime && (
	<>
		<meta property="article:author" content={author} />
		<meta property="article:published_time" content={publishedTime.toISOString()} />
		{modifiedTime && <meta property="article:modified_time" content={modifiedTime.toISOString()} />}
		<meta property="article:section" content="Technology" />
		{tags.map(tag => <meta property="article:tag" content={tag} />)}
	</>
)}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@jayleekr" />
<meta name="twitter:creator" content="@jayleekr" />
<meta name="twitter:url" content={canonicalURL} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(imageUrl, Astro.site)} />
<meta name="twitter:image:alt" content={title} />

<!-- Additional SEO Meta Tags -->
<meta name="format-detection" content="telephone=no" />
<meta name="revisit-after" content="7 days" />

<!-- Theme Initialization Script (prevents FOUC) -->
<script is:inline>
	// Check for saved theme preference or default to system preference
	(function() {
		function getStoredTheme() {
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
		}
		
		const theme = getStoredTheme();
		
		if (theme === 'dark') {
			document.documentElement.classList.add('dark');
		} else {
			document.documentElement.classList.remove('dark');
		}
		
		// Add no-transition class temporarily to prevent animation on page load
		document.documentElement.classList.add('no-transition');
		
		// Remove no-transition class after page load
		window.addEventListener('load', () => {
			document.documentElement.classList.remove('no-transition');
		});
	})();
</script>

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(jsonLD)} />

<!-- Google Analytics -->
<GoogleAnalytics />

<!-- Web Vitals Performance Monitoring -->
<WebVitals />

<!-- Code Enhancement Script -->
<script src="/scripts/code-enhancements.js" defer></script>

<!-- Mobile Enhancement Script -->
<script src="/scripts/mobile-enhancements.js" defer></script>
