---
import { getLangFromUrl, t } from '../../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname;

interface NavItem {
  href: string;
  label: string;
  icon: string;
  key: string;
}

const navItems: NavItem[] = [
  {
    href: lang === 'en' ? '/en' : '/',
    label: t("navigation.home", lang),
    icon: 'home',
    key: 'home'
  },
  {
    href: lang === 'en' ? '/en/blog' : '/blog',
    label: t("navigation.blog", lang),
    icon: 'blog',
    key: 'blog'
  },
  {
    href: '#search',
    label: lang === 'ko' ? '검색' : 'Search',
    icon: 'search',
    key: 'search'
  },
  {
    href: '#theme',
    label: lang === 'ko' ? '테마' : 'Theme',
    icon: 'theme',
    key: 'theme'
  },
  {
    href: '#language',
    label: lang === 'ko' ? '언어' : 'Language',
    icon: 'language',
    key: 'language'
  }
];

function isActive(href: string, currentPath: string): boolean {
  if (href === '/' || href === '/en') {
    return currentPath === href;
  }
  return currentPath.startsWith(href);
}
---

<nav 
  class="fixed bottom-0 left-0 right-0 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md border-t border-gray-200 dark:border-gray-700 z-50 md:hidden"
  style="padding-bottom: env(safe-area-inset-bottom, 0.5rem);"
  role="navigation"
  aria-label="Mobile Navigation"
>
  <div class="flex justify-around items-center h-20 max-w-sm mx-auto px-4">
    {navItems.map((item) => {
      const isCurrentActive = isActive(item.href, currentPath);
      
      if (item.key === 'search') {
        return (
          <button
            id="mobile-search-button"
            class={`flex flex-col items-center gap-1 p-2 rounded-xl transition-all duration-200 min-w-[56px] min-h-[56px] ${
              isCurrentActive 
                ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20' 
                : 'text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800'
            }`}
            aria-label={item.label}
            data-nav-item="search"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <span class="text-xs font-medium leading-none">{item.label}</span>
          </button>
        );
      }
      
      if (item.key === 'theme') {
        return (
          <button
            id="mobile-theme-toggle"
            class={`flex flex-col items-center gap-1 p-2 rounded-xl transition-all duration-200 min-w-[56px] min-h-[56px] ${
              isCurrentActive 
                ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20' 
                : 'text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800'
            }`}
            aria-label={item.label}
            data-nav-item="theme"
          >
            <svg class="w-6 h-6 dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
            <svg class="w-6 h-6 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
            </svg>
            <span class="text-xs font-medium leading-none">{item.label}</span>
          </button>
        );
      }
      
      if (item.key === 'language') {
        return (
          <button
            id="mobile-language-toggle"
            class={`flex flex-col items-center gap-1 p-2 rounded-xl transition-all duration-200 min-w-[56px] min-h-[56px] ${
              isCurrentActive 
                ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20' 
                : 'text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800'
            }`}
            aria-label={item.label}
            data-nav-item="language"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
            </svg>
            <span class="text-xs font-medium leading-none">{lang.toUpperCase()}</span>
          </button>
        );
      }
      
      // Regular navigation items
      return (
        <a
          href={item.href}
          class={`flex flex-col items-center gap-1 p-2 rounded-xl transition-all duration-200 min-w-[56px] min-h-[56px] ${
            isCurrentActive 
              ? 'text-primary-600 dark:text-primary-400 bg-primary-50 dark:bg-primary-900/20' 
              : 'text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800'
          }`}
          aria-label={item.label}
          aria-current={isCurrentActive ? 'page' : undefined}
          data-nav-item={item.key}
        >
          {item.icon === 'home' && (
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
            </svg>
          )}
          {item.icon === 'blog' && (
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
            </svg>
          )}
          <span class="text-xs font-medium leading-none">{item.label}</span>
        </a>
      );
    })}
  </div>
</nav>

<!-- Add padding to body to account for fixed bottom nav -->
<script>
  // Add bottom padding to body to prevent content from being hidden behind the nav
  document.addEventListener('DOMContentLoaded', () => {
    if (window.innerWidth < 768) { // Only on mobile
      document.body.style.paddingBottom = '5rem';
    }
    
    // Handle window resize
    window.addEventListener('resize', () => {
      if (window.innerWidth < 768) {
        document.body.style.paddingBottom = '5rem';
      } else {
        document.body.style.paddingBottom = '0';
      }
    });
  });
</script>

<style>
  /* Ensure the navigation doesn't interfere with content on larger screens */
  @media (min-width: 768px) {
    nav {
      display: none;
    }
  }
  
  /* Handle safe area for devices with home indicator */
  @supports (padding-bottom: env(safe-area-inset-bottom)) {
    nav {
      padding-bottom: calc(0.5rem + env(safe-area-inset-bottom));
    }
  }
  
  /* Active state animations */
  [data-nav-item].active {
    transform: scale(0.95);
  }
  
  /* Touch feedback */
  [data-nav-item]:active {
    transform: scale(0.95);
    transition-duration: 0.1s;
  }
</style>