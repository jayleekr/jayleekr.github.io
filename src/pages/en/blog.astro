---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { type CollectionEntry } from 'astro:content';

// Get all English blog posts
const allBlogPosts = await getCollection('blog', ({ data }) => {
  return data.lang === 'en';
});

// Sort by publication date (newest first)
const sortedPosts = allBlogPosts.sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) =>
    new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title="Blog" description="My thoughts on technology, development, and life" />
  </head>
  <body>
    <Header />
    <main id="main-content" class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <header class="mb-12 text-center">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          Blog
        </h1>
        <p class="text-lg text-gray-600 dark:text-gray-300">
          Sharing my journey through technology, development, and beyond
        </p>
      </header>

      {sortedPosts.length === 0 ? (
        <div class="text-center py-16">
          <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
            No posts published yet
          </h2>
          <p class="text-gray-600 dark:text-gray-400">
            Check back soon for new content!
          </p>
        </div>
      ) : (
        <div class="grid gap-8">
          {sortedPosts.map((post) => (
            <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6">
              <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">
                <a href={`/en/blog/${post.id.replace('en/', '')}`} class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                  {post.data.title}
                </a>
              </h2>
              <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-3">
                <FormattedDate date={post.data.pubDate} />
                {post.data.categories && (
                  <div class="flex gap-2">
                    {post.data.categories.map((category: string) => (
                      <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded text-xs">
                        {category}
                      </span>
                    ))}
                  </div>
                )}
              </div>
              {post.data.description && (
                <p class="text-gray-600 dark:text-gray-300 mb-4">
                  {post.data.description}
                </p>
              )}
              <a 
                href={`/en/blog/${post.id.replace('en/', '')}`}
                class="inline-flex items-center text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 transition-colors"
              >
                Read more
                <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </article>
          ))}
        </div>
      )}
    </main>
    <Footer />
  </body>
</html>