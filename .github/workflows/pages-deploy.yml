name: 'Automatic build'
on:
  push:
    branches:
      - master
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'LICENSE'

jobs:
  build-n-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          
      - name: Install dependencies
        run: |
          gem install bundler
          gem install jekyll
          gem install html-proofer
          bundle install

      - name: Create Jekyll Pages
        run: |
          mkdir -p categories tags
          ls -la categories tags || true
          bash _scripts/sh/create_pages.sh || { echo "Error during create_pages.sh, showing directory structure:"; ls -R categories tags; exit 1; }
          bash _scripts/sh/dump_lastmod.sh
          
      - name: Build Site
        run: |
          JEKYLL_ENV=production bundle exec jekyll build -b "" -d _site

      - name: Test Site
        run: |
          bash tools/test.sh

  deploy:
    needs: build-n-test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          
      - name: Install dependencies
        run: |
          gem install bundler
          gem install jekyll
          gem install html-proofer
          bundle install

      - name: Create Jekyll Pages
        run: |
          mkdir -p categories tags
          ls -la categories tags || true
          bash _scripts/sh/create_pages.sh || { echo "Error during create_pages.sh, showing directory structure:"; ls -R categories tags; exit 1; }
          bash _scripts/sh/dump_lastmod.sh
          
      - name: Build site
        run: |
          JEKYLL_ENV=production bundle exec jekyll build -b "" -d _site
          echo "Build completed, site files:"
          ls -la _site

      - name: Clean working directory
        run: |
          git reset --hard HEAD
          git clean -fd
          git status

      - name: Deploy
        run: |
          bash tools/deploy.sh
