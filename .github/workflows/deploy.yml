name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Test job
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type check
        run: npm run type-check
        
      - name: Run tests
        run: npm run test
        
      - name: Run linter
        run: npm run lint || true # Allow failure for now
        
  # Build job
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build with Astro
        run: |
          npm run build
          touch ./dist/.nojekyll
          
      - name: Optimize build output
        run: |
          # Remove unnecessary files
          find dist -name "*.map" -type f -delete || true
          find dist -name "test-results*" -type d -exec rm -rf {} + || true
          find dist -name "playwright-report*" -type d -exec rm -rf {} + || true
          
          # Generate build info
          echo "{\"buildTime\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\"commit\":\"$GITHUB_SHA\",\"branch\":\"$GITHUB_REF_NAME\"}" > dist/build-info.json
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deploy job
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./artifact
          
      - name: Extract artifact
        run: |
          cd ./artifact
          tar -xf artifact.tar
          
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./artifact
          publish_branch: gh-pages
          force_orphan: true